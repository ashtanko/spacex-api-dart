// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'space_track.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$_SpaceTrack _$$_SpaceTrackFromJson(Map<String, dynamic> json) =>
    _$_SpaceTrack(
      ccsdsOmmVers: json['CCSDS_OMM_VERS'] as String?,
      comment: json['COMMENT'] as String?,
      creationDate: json['CREATION_DATE'] as String?,
      originator: json['ORIGINATOR'] as String?,
      objName: json['OBJECT_NAME'] as String?,
      objId: json['OBJECT_ID'] as String?,
      centerName: json['CENTER_NAME'] as String?,
      refFrame: json['REF_FRAME'] as String?,
      timeSystem: json['TIME_SYSTEM'] as String?,
      meanElementTheory: json['MEAN_ELEMENT_THEORY'] as String?,
      epoch: json['EPOCH'] as String?,
      meanMotion: (json['MEAN_MOTION'] as num?)?.toDouble(),
      eccentricity: (json['ECCENTRICITY'] as num?)?.toDouble(),
      inclination: (json['INCLINATION'] as num?)?.toDouble(),
      raOfAscNode: (json['RA_OF_ASC_NODE'] as num?)?.toDouble(),
      argOfPericenter: (json['ARG_OF_PERICENTER'] as num?)?.toDouble(),
      meanAnomaly: (json['MEAN_ANOMALY'] as num?)?.toDouble(),
      ephemerisType: (json['EPHEMERIS_TYPE'] as num?)?.toDouble(),
      classificationType: json['CLASSIFICATION_TYPE'] as String?,
      noradCatId: json['NORAD_CAT_ID'] as int?,
      elementSetNo: json['ELEMENT_SET_NO'] as int?,
      revAtEpoch: json['REV_AT_EPOCH'] as int?,
      bstar: (json['BSTAR'] as num?)?.toDouble(),
      meanMotionDot: (json['MEAN_MOTION_DOT'] as num?)?.toDouble(),
      meanMotionDdot: (json['MEAN_MOTION_DDOT'] as num?)?.toDouble(),
      semimajorAxis: (json['SEMIMAJOR_AXIS'] as num?)?.toDouble(),
      period: (json['PERIOD'] as num?)?.toDouble(),
      apoapsis: (json['APOAPSIS'] as num?)?.toDouble(),
      periapsis: (json['PERIAPSIS'] as num?)?.toDouble(),
      objectType: json['OBJECT_TYPE'] as String?,
      rcsSize: json['RCS_SIZE'] as String?,
      countryCode: json['COUNTRY_CODE'] as String?,
      launchDate: json['LAUNCH_DATE'] as String?,
      site: json['SITE'] as String?,
      decayDate: json['DECAY_DATE'] as String?,
      decayed: json['DECAYED'] as int?,
      file: json['FILE'] as int?,
      gpId: json['GP_ID'] as int?,
      tleLine0: json['TLE_LINE0'] as String?,
      tleLine1: json['TLE_LINE1'] as String?,
      tleLine2: json['TLE_LINE2'] as String?,
    );

Map<String, dynamic> _$$_SpaceTrackToJson(_$_SpaceTrack instance) =>
    <String, dynamic>{
      'CCSDS_OMM_VERS': instance.ccsdsOmmVers,
      'COMMENT': instance.comment,
      'CREATION_DATE': instance.creationDate,
      'ORIGINATOR': instance.originator,
      'OBJECT_NAME': instance.objName,
      'OBJECT_ID': instance.objId,
      'CENTER_NAME': instance.centerName,
      'REF_FRAME': instance.refFrame,
      'TIME_SYSTEM': instance.timeSystem,
      'MEAN_ELEMENT_THEORY': instance.meanElementTheory,
      'EPOCH': instance.epoch,
      'MEAN_MOTION': instance.meanMotion,
      'ECCENTRICITY': instance.eccentricity,
      'INCLINATION': instance.inclination,
      'RA_OF_ASC_NODE': instance.raOfAscNode,
      'ARG_OF_PERICENTER': instance.argOfPericenter,
      'MEAN_ANOMALY': instance.meanAnomaly,
      'EPHEMERIS_TYPE': instance.ephemerisType,
      'CLASSIFICATION_TYPE': instance.classificationType,
      'NORAD_CAT_ID': instance.noradCatId,
      'ELEMENT_SET_NO': instance.elementSetNo,
      'REV_AT_EPOCH': instance.revAtEpoch,
      'BSTAR': instance.bstar,
      'MEAN_MOTION_DOT': instance.meanMotionDot,
      'MEAN_MOTION_DDOT': instance.meanMotionDdot,
      'SEMIMAJOR_AXIS': instance.semimajorAxis,
      'PERIOD': instance.period,
      'APOAPSIS': instance.apoapsis,
      'PERIAPSIS': instance.periapsis,
      'OBJECT_TYPE': instance.objectType,
      'RCS_SIZE': instance.rcsSize,
      'COUNTRY_CODE': instance.countryCode,
      'LAUNCH_DATE': instance.launchDate,
      'SITE': instance.site,
      'DECAY_DATE': instance.decayDate,
      'DECAYED': instance.decayed,
      'FILE': instance.file,
      'GP_ID': instance.gpId,
      'TLE_LINE0': instance.tleLine0,
      'TLE_LINE1': instance.tleLine1,
      'TLE_LINE2': instance.tleLine2,
    };
